//
// Copyright 2021 DXOS.org
//

syntax = "proto3";

import "google/protobuf/empty.proto";

import "dxos/keys.proto";

package dxos.halo.invitations;

/**
 * Represents a Space invitation.
 */
message InvitationDescriptor {
  /**
   * Defines an invitation type.
   */
  enum Type {
    /// Interactive invitation is when both peers are online at the same time.
    INTERACTIVE = 0;
    /// Offline is when only a single peer needs to be online at the time.
    OFFLINE = 1;
  }

  Type type = 1;
  bytes swarm_key = 2;
  bytes invitation = 3;

  /// Only present if type == OFFLINE.
  optional bytes identity_key = 4;

  /// Must be stripped out when passing to another peer.
  optional bytes secret = 5;
}

//
// HALO device invitations.
//

message AdmitDeviceRequest {
  dxos.keys.PublicKey device_key = 1;
  dxos.keys.PublicKey control_feed_key = 2;
  dxos.keys.PublicKey data_feed_key = 3;
}

message AcceptDeviceRequest {
  dxos.keys.PublicKey identity_key = 1;
  dxos.keys.PublicKey halo_space_key = 2;
  dxos.keys.PublicKey genesis_feed_key = 3;
}

service HaloInvitationsService {
  ///
  rpc AdmitDevice(AdmitDeviceRequest) returns (google.protobuf.Empty);

  ///
  rpc AcceptDevice(AcceptDeviceRequest) returns (google.protobuf.Empty);
}

//
// Space agent invitations.
//

message AdmitAgentRequest {
  dxos.keys.PublicKey identity_key = 1;
  dxos.keys.PublicKey device_key = 2;
  dxos.keys.PublicKey control_feed_key = 3;
  dxos.keys.PublicKey data_feed_key = 4;
}

message AcceptAgentRequest {
  dxos.keys.PublicKey space_key = 1;
  dxos.keys.PublicKey genesis_feed_key = 3;
}

service SpaceInvitationsService {
  ///
  rpc AdmitAgent(AdmitAgentRequest) returns (google.protobuf.Empty);

  ///
  rpc AcceptAgent(AcceptAgentRequest) returns (google.protobuf.Empty);
}
