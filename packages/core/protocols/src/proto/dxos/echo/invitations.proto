//
// Copyright 2022 DXOS.org
//

syntax = "proto3";

import "google/protobuf/empty.proto";

import "dxos/keys.proto";

package dxos.echo.invitations;

// TODO(burdon): Distinguish Space/Halo invitations (not echo?) Move all defs to halo?

/**
 * Represents a Space invitation.
 */
message InvitationDescriptor {
  /**
   * Defines an invitation type.
   */
  enum Type {
    /// Interactive invitation is when both peers are online at the same time.
    INTERACTIVE = 0;
    /// Offline is when only a single peer needs to be online at the time.
    OFFLINE = 1;
  }

  Type type = 1;
  bytes swarm_key = 2;
  bytes invitation = 3;

  /// Only present if type == OFFLINE.
  optional bytes identity_key = 4;

  /// Must be stripped out when passing to another peer.
  optional bytes secret = 5;
}

// Mock invitation process for data spaces

message AdmitRequest {
  dxos.keys.PublicKey identity_key = 1;
  dxos.keys.PublicKey device_key = 2;
  dxos.keys.PublicKey control_feed_key = 3;
  dxos.keys.PublicKey data_feed_key = 4;
}

// TODO(burdon): Reconcile verbs with halo equivalent.

// Inviter verbs
service InviterInvitationService {
  rpc Admit(AdmitRequest) returns (google.protobuf.Empty);
}

message AcceptRequest {
  dxos.keys.PublicKey space_key = 1;
  dxos.keys.PublicKey genesis_feed_key = 3;
}

// Invitee verbs
service InviteeInvitationService {
  rpc Accept(AcceptRequest) returns (google.protobuf.Empty);
}
